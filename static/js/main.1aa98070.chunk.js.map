{"version":3,"sources":["api.ts","components/header/Header.tsx","components/converter/Converter.tsx","App.tsx","index.tsx"],"names":["API_MONO","getRate","a","fetch","response","json","Header","usdBuy","usdSell","eurBuy","eurSell","className","toFixed","Converter","useState","operation","setOperation","amount","setAmount","yourCurrency","setYourCurrency","changeTo","setChangeTo","convertedSum","setConvertedSum","name","value","onChange","event","target","type","toString","replace","placeholder","App","usdCourseBuy","setUsdCourseBuy","usdCourseSell","setUsdCourseSell","eurCourseBuy","setEurCourseBuy","eurCourseSell","setEurCourseSell","useEffect","currentCourse","euroRate","usdRate","rateBuy","rateSell","console","log","newCourse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1aa98070.chunk.js","sourcesContent":["const API_MONO = 'https://api.monobank.ua/bank/currency';\n\nexport async function getRate(): Promise<Privat[]> {\n  const response = await fetch(API_MONO);\n\n  return response.json();\n}\n","import React from 'react';\nimport './Header.scss';\n\ntype Props = {\n  usdBuy: number;\n  usdSell: number;\n  eurBuy: number;\n  eurSell: number;\n};\n\nexport const Header: React.FC <Props> = ({\n  usdBuy,\n  usdSell,\n  eurBuy,\n  eurSell,\n}) => {\n  return (\n    <div className=\"header\">\n      <h1>UAH exchange rates</h1>\n      <table className=\"header__table\">\n        <tr className=\"header__table-row\">\n          <th>operation</th>\n          <th>USD</th>\n          <th>EUR</th>\n        </tr>\n        <tr className=\"header__table-row\">\n          <td>BUY</td>\n          <td>{+usdBuy.toFixed(2)}</td>\n          <td>{+eurBuy.toFixed(2)}</td>\n        </tr>\n        <tr className=\"header__table-row\">\n          <td>SELL</td>\n          <td>{+usdSell.toFixed(2)}</td>\n          <td>{+eurSell.toFixed(2)}</td>\n        </tr>\n      </table>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './Converter.scss';\n\ntype Props = {\n  usdBuy: number;\n  usdSell: number;\n  eurBuy: number;\n  eurSell: number;\n};\n\nexport const Converter: React.FC <Props> = ({\n  usdBuy,\n  usdSell,\n  eurBuy,\n  eurSell,\n}) => {\n  const [operation, setOperation] = useState<string>('sell');\n  const [amount, setAmount] = useState<number>(0);\n  // const [yourSum, setYourSum] = useState<number>(0);\n  const [yourCurrency, setYourCurrency] = useState<string>('UAH');\n  const [changeTo, setChangeTo] = useState<string>('USD');\n  const [convertedSum, setConvertedSum] = useState<number>(0);\n\n  const changeOperation = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setOperation(event.target.value);\n  };\n\n  const chooseYourCurrency = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setYourCurrency(event.target.value);\n  };\n\n  const chooseChangeTo = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setChangeTo(event.target.value);\n  };\n\n  return (\n    <div className=\"converter\">\n      <div className=\"converter__operation\">\n        <h3>Your operation</h3>\n        <select\n          name=\"operation\"\n          value={operation}\n          onChange={changeOperation}\n        >\n          <option value=\"sale\">sale</option>\n          <option value=\"buy\">buy</option>\n        </select>\n      </div>\n      <section className=\"converter__inOutPut-container\">\n        <div className=\"converter__inPut-container\">\n          <div>\n            <h4>Your Sum</h4>\n            <input\n              name=\"input\"\n              type=\"number\"\n              className=\"converter__input\"\n              value={amount.toString().replace(/^0+/, '')}\n              onChange={(event) => setAmount(+event.target.value)}\n              placeholder=\"write your amount\"\n            />\n          </div>\n\n          <div className=\"converter__operation\">\n            <h4>Change from:</h4>\n            <select\n              name=\"operation\"\n              value={yourCurrency}\n              onChange={chooseYourCurrency}\n            >\n              <option value=\"UAH\">UAH</option>\n              <option value=\"USD\">USD</option>\n              <option value=\"EUR\">EUR</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"converter__OutPut-container\">\n          <div>\n            <h4>Converted Sum</h4>\n            <input\n              name=\"input\"\n              type=\"number\"\n              className=\"converter__input\"\n              value={convertedSum.toString().replace(/^0+/, '')}\n              onChange={(event) => setConvertedSum(+event.target.value)}\n              placeholder=\"converted amount\"\n            />\n          </div>\n\n          <div className=\"converter__operation\">\n            <h4>Change to:</h4>\n            <select\n              name=\"operation\"\n              value={changeTo}\n              onChange={chooseChangeTo}\n            >\n              <option value=\"UAH\">UAH</option>\n              <option value=\"USD\">USD</option>\n              <option value=\"EUR\">EUR</option>\n            </select>\n          </div>\n        </div>\n      </section>\n      <p>{usdBuy}</p>\n      <p>{usdSell}</p>\n      <p>{eurBuy}</p>\n      <p>{eurSell}</p>\n    </div>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useState, useEffect } from 'react';\nimport { getRate } from './api';\nimport { Header } from './components/header/Header';\nimport { Converter } from './components/converter/Converter';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [usdCourseBuy, setUsdCourseBuy] = useState<number>(0);\n  const [usdCourseSell, setUsdCourseSell] = useState<number>(0);\n  const [eurCourseBuy, setEurCourseBuy] = useState<number>(0);\n  const [eurCourseSell, setEurCourseSell] = useState<number>(0);\n\n  useEffect(() => {\n    const newCourse = async () => {\n      const currentCourse = await getRate();\n\n      const euroRate = currentCourse[1];\n      const usdRate = currentCourse[0];\n\n      if (euroRate) {\n        setEurCourseBuy(+euroRate.rateBuy);\n        setEurCourseSell(+euroRate.rateSell);\n      }\n\n      if (usdRate) {\n        setUsdCourseBuy(+usdRate.rateBuy);\n        setUsdCourseSell(+usdRate.rateSell);\n      }\n\n      console.log(currentCourse, usdCourseBuy);\n    };\n\n    newCourse();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Header\n        usdBuy={usdCourseBuy}\n        usdSell={usdCourseSell}\n        eurBuy={eurCourseBuy}\n        eurSell={eurCourseSell}\n      />\n      <Converter\n        usdBuy={usdCourseBuy}\n        usdSell={usdCourseSell}\n        eurBuy={eurCourseBuy}\n        eurSell={eurCourseSell}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}