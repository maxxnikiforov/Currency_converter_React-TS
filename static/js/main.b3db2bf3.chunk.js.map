{"version":3,"sources":["api.ts","components/header/Header.tsx","components/converter/Converter.tsx","App.tsx","index.tsx"],"names":["API_MONO","getRate","a","fetch","response","json","Header","usdBuy","usdSell","eurBuy","eurSell","className","toFixed","ConverterComponent","mono","useState","operation","setOperation","leftCur","setLeftCur","rightCur","setRightCur","left","setLeft","right","setRight","useEffect","firstCur","secondCur","typeOperation","monoObj","newRight","Number","convertFromLeft","newLeft","convertFromRight","name","value","onChange","event","target","type","e","replace","k","placeholder","App","setMono","monoInitial","USD","buy","sell","EUR","UAH","currentCourse","euroRate","usdRate","eurUsdRate","rateBuy","rateSell","newCourse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3db2bf3.chunk.js","sourcesContent":["const API_MONO = 'https://api.monobank.ua/bank/currency';\n\nexport async function getRate(): Promise<MONO[]> {\n  const response = await fetch(API_MONO);\n\n  return response.json();\n}\n","import React from 'react';\nimport './Header.scss';\n\ntype Props = {\n  usdBuy: number | null;\n  usdSell: number | null;\n  eurBuy: number | null;\n  eurSell: number | null;\n};\n\nexport const Header: React.FC <Props> = ({\n  usdBuy,\n  usdSell,\n  eurBuy,\n  eurSell,\n}) => {\n  return (\n    <div className=\"header\">\n      <h1>UAH exchange rates</h1>\n      <table className=\"header__table\">\n        <tbody>\n          <tr className=\"header__table-row\">\n            <th>operation</th>\n            <th>USD</th>\n            <th>EUR</th>\n          </tr>\n          <tr className=\"header__table-row\">\n            <td>BUY</td>\n            <td>{usdBuy ? +usdBuy.toFixed(2) : 0}</td>\n            <td>{eurBuy ? +eurBuy.toFixed(2) : 0}</td>\n          </tr>\n          <tr className=\"header__table-row\">\n            <td>SELL</td>\n            <td>{usdSell ? +(usdSell.toFixed(2)) : 0}</td>\n            <td>{eurSell ? +(eurSell.toFixed(2)) : 0}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Exchange, Currency, Operation } from '../../type/types';\nimport './Converter.scss';\n\ntype Props = {\n  mono: Exchange | null;\n};\n\nexport const ConverterComponent: React.FC <Props> = ({\n  mono,\n}) => {\n  const [operation, setOperation] = useState<Operation>('buy');\n  const [leftCur, setLeftCur] = useState<Currency>('UAH');\n  const [rightCur, setRightCur] = useState<Currency>('USD');\n  const [left, setLeft] = useState('');\n  const [right, setRight] = useState('');\n\n  const onChangeLeft = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setRight('');\n    setLeft(e.target.value.replace(/[^0-9]/g, ''));\n    const k = mono ? mono[leftCur][rightCur][operation] : 1;\n\n    setRight((Number(e.target.value) * Number(k)).toFixed(2));\n  };\n\n  const onChangeRight = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setLeft('');\n    setRight(e.target.value.replace(/[^0-9]/g, ''));\n    const k = mono ? mono[rightCur][leftCur][operation] : 1;\n\n    setLeft((Number(e.target.value) * Number(k)).toFixed(2));\n  };\n\n  const changeOperation = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    if (value === 'sell' || value === 'buy') {\n      setOperation(value);\n    }\n  };\n\n  const onChangeLeftCurrency = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    if (value === 'USD' || value === 'EUR' || value === 'UAH') {\n      setLeftCur(value);\n    }\n  };\n\n  const onChangeRightCurrency = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    if (value === 'USD' || value === 'EUR' || value === 'UAH') {\n      setRightCur(value);\n    }\n  };\n\n  const convertFromLeft = (\n    firstCur: Currency, secondCur: Currency, typeOperation: Operation, monoObj: Exchange | null,\n  ) => {\n    if (left && monoObj\n      && (leftCur === 'USD' || leftCur === 'EUR' || leftCur === 'UAH')\n      && (rightCur === 'USD' || rightCur === 'EUR' || rightCur === 'UAH')\n      && (typeOperation === 'buy' || typeOperation === 'sell')\n    ) {\n      const newRight = (+left)\n      * Number(monoObj[leftCur][rightCur][operation]);\n\n      setRight(newRight.toFixed(2));\n    }\n  };\n\n  const convertFromRight = (\n    firstCur: Currency, secondCur: Currency, typeOperation: Operation, monoObj: Exchange | null,\n  ) => {\n    if (right && monoObj\n      && (leftCur === 'USD' || leftCur === 'EUR' || leftCur === 'UAH')\n      && (rightCur === 'USD' || rightCur === 'EUR' || rightCur === 'UAH')\n      && (typeOperation === 'buy' || typeOperation === 'sell')\n    ) {\n      const newLeft = (+right) * Number(monoObj[rightCur][leftCur][operation]);\n\n      setLeft(newLeft.toFixed(2));\n    }\n  };\n\n  useEffect(() => {\n    convertFromLeft(leftCur, rightCur, operation, mono);\n  }, [leftCur, operation]);\n\n  useEffect(() => {\n    convertFromRight(leftCur, rightCur, operation, mono);\n  }, [rightCur, operation]);\n\n  return (\n    <div className=\"converter\">\n      <div className=\"converter__operation\">\n        <h3>Your operation</h3>\n        <select\n          className=\"converter__select\"\n          name=\"operation\"\n          value={operation}\n          onChange={changeOperation}\n        >\n          <option value=\"sell\">sell</option>\n          <option value=\"buy\">buy</option>\n        </select>\n      </div>\n\n      <section className=\"converter__inOutPut-container\">\n        <div className=\"converter__inPut-container\">\n          <div>\n            <h4>Your Sum</h4>\n            <input\n              name=\"input\"\n              type=\"string\"\n              className=\"converter__input\"\n              value={left}\n              onChange={onChangeLeft}\n              placeholder=\"write your amount\"\n            />\n          </div>\n\n          <div className=\"converter__operation\">\n            <h4>Change from:</h4>\n            <select\n              className=\"converter__select\"\n              name=\"operation\"\n              value={leftCur}\n              onChange={onChangeLeftCurrency}\n            >\n              <option value=\"UAH\">UAH</option>\n              <option value=\"USD\">USD</option>\n              <option value=\"EUR\">EUR</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"converter__OutPut-container\">\n          <div>\n            <h4>Converted Sum</h4>\n            <input\n              name=\"input\"\n              type=\"string\"\n              className=\"converter__input\"\n              value={right}\n              onChange={onChangeRight}\n              placeholder=\"converted amount\"\n            />\n          </div>\n\n          <div className=\"converter__operation\">\n            <h4>Change to:</h4>\n            <select\n              className=\"converter__select\"\n              name=\"operation\"\n              value={rightCur}\n              onChange={onChangeRightCurrency}\n            >\n              <option value=\"UAH\">UAH</option>\n              <option value=\"USD\">USD</option>\n              <option value=\"EUR\">EUR</option>\n            </select>\n          </div>\n        </div>\n      </section>\n\n      {leftCur === rightCur\n       && <p className=\"converter__alert\">Please choose different currensies</p>}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { getRate } from './api';\nimport { Header } from './components/header/Header';\nimport { ConverterComponent } from './components/converter/Converter';\nimport { Exchange } from './type/types';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [mono, setMono] = useState<Exchange | null>(null);\n\n  useEffect(() => {\n    const newCourse = async () => {\n      const monoInitial: Exchange = {\n        USD: {\n          USD: {\n            buy: 'no data',\n            sell: 'no data',\n          },\n          EUR: {\n            buy: 'no data',\n            sell: 'no data',\n          },\n          UAH: {\n            buy: 'no data',\n            sell: 'no data',\n          },\n        },\n        EUR: {\n          USD: {\n            buy: 'no data',\n            sell: 'no data',\n          },\n          EUR: {\n            buy: 'no data',\n            sell: 'no data',\n          },\n          UAH: {\n            buy: 'no data',\n            sell: 'no data',\n          },\n        },\n        UAH: {\n          USD: {\n            buy: 'no data',\n            sell: 'no data',\n          },\n          EUR: {\n            buy: 'no data',\n            sell: 'no data',\n          },\n          UAH: {\n            buy: 'no data',\n            sell: 'no data',\n          },\n        },\n      };\n\n      monoInitial.EUR.EUR.buy = 1;\n      monoInitial.EUR.EUR.sell = 1;\n      monoInitial.USD.USD.buy = 1;\n      monoInitial.USD.USD.sell = 1;\n      monoInitial.UAH.UAH.buy = 1;\n      monoInitial.UAH.UAH.sell = 1;\n\n      const currentCourse = await getRate();\n\n      const euroRate = currentCourse[1];\n      const usdRate = currentCourse[0];\n      const eurUsdRate = currentCourse[2];\n\n      if (eurUsdRate) {\n        monoInitial.EUR.USD.buy = +eurUsdRate.rateBuy;\n        monoInitial.USD.EUR.sell = 1 / (+eurUsdRate.rateBuy);\n        monoInitial.EUR.USD.sell = +eurUsdRate.rateSell;\n        monoInitial.USD.EUR.buy = 1 / (+eurUsdRate.rateSell);\n      }\n\n      if (euroRate) {\n        monoInitial.EUR.UAH.buy = +euroRate.rateBuy;\n        monoInitial.UAH.EUR.sell = 1 / (+euroRate.rateBuy);\n        monoInitial.EUR.UAH.sell = +euroRate.rateSell;\n        monoInitial.UAH.EUR.buy = 1 / (+euroRate.rateSell);\n      }\n\n      if (usdRate) {\n        monoInitial.USD.UAH.buy = +usdRate.rateBuy;\n        monoInitial.UAH.USD.sell = 1 / (+usdRate.rateBuy);\n        monoInitial.USD.UAH.sell = +usdRate.rateSell;\n        monoInitial.UAH.USD.buy = 1 / (+usdRate.rateSell);\n      }\n\n      setMono(monoInitial);\n    };\n\n    newCourse();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Header\n        usdBuy={mono ? +(mono.USD.UAH.buy) : 0}\n        usdSell={mono ? +(mono.USD.UAH.sell) : 0}\n        eurBuy={mono ? +(mono.EUR.UAH.buy) : 0}\n        eurSell={mono ? +(mono.EUR.UAH.sell) : 0}\n      />\n      <ConverterComponent\n        mono={mono}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}